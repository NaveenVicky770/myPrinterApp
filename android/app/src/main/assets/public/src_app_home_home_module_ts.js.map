{"version":3,"file":"src_app_home_home_module_ts.js","mappings":"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","sources":["./src/app/home/home-routing.module.ts","./src/app/home/home.module.ts","./src/app/home/home.page.ts","./src/app/services/print.service.ts","./src/app/home/home.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomePage } from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { HomePage } from './home.page';\n\nimport { HomePageRoutingModule } from './home-routing.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    HomePageRoutingModule\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n","import { Component } from '@angular/core';\n\nimport { PrintService } from '../services/print.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage {\n  bluetoothList: any = [];\n  selectedPrinter: any;\n\n  constructor(private print: PrintService) {}\n  //This will list all of your bluetooth devices\n  listPrinter() {\n    this.print.searchBluetoothPrinter().then((resp) => {\n      //List of bluetooth device list\n      this.bluetoothList = resp;\n    });\n    alert(this.bluetoothList);\n  }\n  //This will store selected bluetooth device mac address\n  selectPrinter(macAddress) {\n    //Selected printer macAddress stored here\n    this.selectedPrinter = macAddress;\n  }\n\n  //This will print\n  printStuff() {\n    alert(this.selectedPrinter+' started printing');\n    //The text that you want to print\n    const myText = 'Hello hello hello \\n\\n\\n This is a test \\n\\n\\n';\n    this.print.sendToBluetoothPrinter(this.selectedPrinter, myText);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BluetoothSerial } from '@ionic-native/bluetooth-serial/ngx';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrintService {\n\n  constructor(public btSerial: BluetoothSerial) { }\n\n  searchBluetoothPrinter()\n{\n//This will return a list of bluetooth devices\n   return this.btSerial.list();\n}\nconnectToBluetoothPrinter(macAddress)\n{\n//This will connect to bluetooth printer via the mac address provided\n   return this.btSerial.connect(macAddress);\n}\ndisconnectBluetoothPrinter()\n{\n//This will disconnect the current bluetooth connection\n   return this.btSerial.disconnect();\n}\n//macAddress->the device's mac address\n//data_string-> string to be printer\n// eslint-disable-next-line @typescript-eslint/naming-convention\nsendToBluetoothPrinter(macAddress,data_string)\n{\n   //1. Try connecting to bluetooth printer\n   this.connectToBluetoothPrinter(macAddress)\n   .subscribe(_=>{\n      //2. Connected successfully\n      this.btSerial.write(data_string)\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      .then(_=>{\n       //3. Print successful\n       //If you want to tell user print is successful,\n       alert('Print successful');\n       //handle it here\n       //4. IMPORTANT! Disconnect bluetooth after printing\n       this.disconnectBluetoothPrinter();\n       },err=>{\n         //If there is an error printing to bluetooth printer\n         //handle it here\n       });\n   },err=>{\n\n     //If there is an error connecting to bluetooth printer\n     //handle it here\n   });\n}\n}\n","export default \"<ion-content>\\n  <ion-list>\\n    <ion-button (click)=\\\"listPrinter()\\\">List Printers</ion-button>\\n    <ion-item *ngFor=\\\"let item of bluetoothList\\\" (click)=\\\"selectPrinter(item.id)\\\">\\n      {{item.name}} {{item.id}}\\n    </ion-item>\\n  </ion-list>\\n  <div>Selected Printer: {{selectedPrinter}}</div>\\n  <ion-button\\n    expand=\\\"full\\\"\\n    color=\\\"danger\\\"\\n    *ngIf=\\\"selectedPrinter\\\"\\n    (click)=\\\"printStuff()\\\"\\n  >\\n    PRINT!\\n  </ion-button>\\n</ion-content>\\n\";"],"names":[],"sourceRoot":"webpack:///"}